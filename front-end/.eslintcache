[{"/home/jason/HardEng/Hardeng/front-end/src/ChargingExperience.js":"1","/home/jason/HardEng/Hardeng/front-end/src/index.js":"2","/home/jason/HardEng/Hardeng/front-end/src/LoginForm.js":"3"},{"size":3597,"mtime":1609873350365,"results":"4","hashOfConfig":"5"},{"size":359,"mtime":1610043785850,"results":"6","hashOfConfig":"5"},{"size":1920,"mtime":1610311811810,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"ong5qh",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jason/HardEng/Hardeng/front-end/src/ChargingExperience.js",["15"],"import React from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker} from 'react-leaflet'\nimport L from 'leaflet'\nimport \"./ChargingExperience.css\"\n\n//delete L.Icon.Default.prototype._getIconUrl;\n//L.Icon.Default.mergeOptions({\n//    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n//    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n//    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n//});\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  iconRetinaUrl: iconRetina,\n  shadowUrl: iconShadow,\n  iconSize: [24,36],\n  iconAnchor: [12,36]\n})\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst centerPosition = [37.983810, 23.727539];\n\nconst stationsHardcoded = [\n  {position: [37.983810, 23.727539], label: \"Athens\", time: \"10 minutes\", condition: \"Available\"},\n  {position: [40.629269, 22.947412], label: \"Thessaloniki\", time: \"5 minutes\", condition: \"Maintenance\"}\n];\n\nexport class ChargingExperience extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      stations: stationsHardcoded,\n      chosenIndex: null,\n      zoom: 10\n    };\n\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  showMarkers(){\n    var i = this.state.chosenIndex;\n  \n    if(i === null) {\n      return(this.state.stations.map(({position, label}, index) => <Marker key={index} value={label} position={position}></Marker>));\n    }\n\n    else {\n      var station = this.state.stations[i];\n      return(<Marker key={i} value={station.label} position={station.position}></Marker>);\n    }\n  }\n\n  showOptions(){\n    return(\n      this.state.stations.map(({ position, label }, index) => <option value={index}> {label} </option>)\n      );\n  }\n\n  handleSelect(e){\n    e.target.value == -1 ? this.setState({chosenIndex: null}) : this.setState({chosenIndex: e.target.value});\n  }\n\n  render(){\n    return(\n      <div className=\"container\">\n        <div className=\"card\">\n          <MapContainer \n            className=\"map\" \n            center={centerPosition} \n            zoom={this.state.zoom} \n          >\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n\n            {this.showMarkers()}\n\n          </MapContainer>\n\n          <form>\n            <select className=\"browser-default\" onChange={this.handleSelect}>\n              <option value=\"\" disabled selected>Choose station ...</option>\n              <option value={-1}>Show all stations</option>\n              {this.showOptions()}\n            </select>\n          </form>\n          </div>\n\n          {this.state.chosenIndex !== null && (\n            <table className=\"centered white\">\n            <thead>\n              <tr>\n                  <th>Location</th>\n                  <th>Condition</th>\n                  <th>Required Time</th>\n              </tr>\n            </thead>\n    \n            <tbody>\n              <tr>\n                <td>{this.state.stations[this.state.chosenIndex].label}</td>\n                <td>{this.state.stations[this.state.chosenIndex].condition}</td>\n                <td>{this.state.stations[this.state.chosenIndex].time}</td>\n              </tr>\n            </tbody>\n            </table>\n            )\n          }\n        \n      </div>\n    )\n  }\n}\n\nexport default ChargingExperience","/home/jason/HardEng/Hardeng/front-end/src/index.js",[],"/home/jason/HardEng/Hardeng/front-end/src/LoginForm.js",[],{"ruleId":"16","severity":1,"message":"17","line":67,"column":20,"nodeType":"18","messageId":"19","endLine":67,"endColumn":22},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]