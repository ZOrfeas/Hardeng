[{"/home/jason/HardEng/Hardeng/front-end/src/StationMonitoring.js":"1","/home/jason/HardEng/Hardeng/front-end/src/API.js":"2","/home/jason/HardEng/Hardeng/front-end/src/index.js":"3","/home/jason/HardEng/Hardeng/front-end/src/ChargingExperience.js":"4","/home/jason/HardEng/Hardeng/front-end/src/LoginForm.js":"5","/home/jason/HardEng/Hardeng/front-end/src/Map.js":"6","/home/jason/HardEng/Hardeng/front-end/src/UserInfo.js":"7"},{"size":7958,"mtime":1614191058870,"results":"8","hashOfConfig":"9"},{"size":1440,"mtime":1614169291104,"results":"10","hashOfConfig":"9"},{"size":859,"mtime":1614190347530,"results":"11","hashOfConfig":"9"},{"size":8201,"mtime":1614169623384,"results":"12","hashOfConfig":"9"},{"size":4197,"mtime":1614189333360,"results":"13","hashOfConfig":"9"},{"size":5693,"mtime":1614190144290,"results":"14","hashOfConfig":"9"},{"size":1703,"mtime":1610571590566,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ong5qh",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jason/HardEng/Hardeng/front-end/src/StationMonitoring.js",["32","33","34","35","36","37"],"/home/jason/HardEng/Hardeng/front-end/src/API.js",[],"/home/jason/HardEng/Hardeng/front-end/src/index.js",["38","39","40"],"/home/jason/HardEng/Hardeng/front-end/src/ChargingExperience.js",[],"/home/jason/HardEng/Hardeng/front-end/src/LoginForm.js",[],"/home/jason/HardEng/Hardeng/front-end/src/Map.js",["41","42"],"import React, { useState } from 'react';\nimport UserInfo from './UserInfo';\nimport M from 'materialize-css';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet'\nimport L from 'leaflet'\nimport { getStations } from './API';\nimport 'leaflet/dist/leaflet.css';\nimport \"./Map.css\";\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport person from './icons/black-marker.png';\n\n\nvar locationIcon = L.icon({\n  iconUrl: person,\n  shadowUrl: iconShadow,\n  iconSize: [36, 36],\n  iconAnchor: [18, 36]\n});\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  iconRetinaUrl: iconRetina,\n  shadowUrl: iconShadow,\n  iconSize: [24, 36],\n  iconAnchor: [12, 36]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst Athens = [37.983810, 23.727539];\n\nconst stationsHardcoded = [\n  { position: [37.983810, 23.727539], label: \"Athens\", time: \"10 minutes\", condition: \"Available\" },\n  { position: [40.629269, 22.947412], label: \"Thessaloniki\", time: \"5 minutes\", condition: \"Maintenance\" }\n];\n\nfunction LocationMarker(props) {\n  const [position, setPosition] = useState(null)\n  const map = useMapEvents({\n    click() {\n      map.locate();\n    },\n\n    locationfound(e) {\n      setPosition(e.latlng);\n      props.setter(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  })\n\n  return position === null ? null : (\n    <Marker position={position} icon={locationIcon}>\n      <Popup>You are here</Popup>\n    </Marker>\n  )\n}\n\nclass Map extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      stations: stationsHardcoded,\n      currentPos: null,\n      chosenIndex: null,\n      zoom: 10,\n      error: null,\n    };\n    this.setState({\n      username: \"\"  \n    })\n    this.showMarkers = this.showMarkers.bind(this);\n    this.handleLocation = this.handleLocation.bind(this);\n    this.showOptions = this.showOptions.bind(this);\n    // this.handleLocation = this.handleLocation.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleUserInput = this.handleUserInput.bind(this);\n  }\n\n  handleUserInput(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  showMarkers() {\n    var i = this.state.chosenIndex;\n\n    if (i === null) {\n      return (this.state.stations.map(({ position, label }, index) => <Marker key={index} value={label} position={position}></Marker>));\n    }\n\n    else {\n      var station = this.state.stations[i];\n      return (<Marker key={i} value={station.label} position={station.position}></Marker>);\n    }\n  }\n\n  showOptions() {\n    return (\n      this.state.stations.map(({ position, label }, index) => <option value={index}> {label} </option>)\n    );\n  }\n\n  handleSelect(e) {\n    e.target.value === \"all\" ? this.setState({ chosenIndex: null }) : this.setState({ chosenIndex: e.target.value });\n  }\n\n  handleLocation(latlng) {\n    this.setState({\n      currentPos: latlng\n    } \n    );\n}\n\n  componentDidMount() {\n    M.AutoInit();\n  }\n\n  submitChanges(){\n    if (window.confirm(\"U sur?????\")) {\n        //get driver with id and change info\n    } \n    else {\n        //do nothing\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"row\">\n          <div className=\"col s9 right align\">\n            <div className=\"card hoverable\">\n                <MapContainer\n                  className=\"map\"\n                  center={Athens}\n                  zoom={this.state.zoom}\n                >\n                  <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  />\n                  {this.showMarkers()}\n                  <LocationMarker setter={this.handleLocation} />\n                </MapContainer>\n                <form>\n                    <select className=\"browser-default\" onChange={this.handleSelect}>\n                      <option value=\"\" disabled selected>Choose station ...</option>\n                      <option value=\"all\">Show all stations</option>\n                      {this.showOptions()}\n                    </select>\n                  </form>\n            </div>\n          </div>\n          <div className=\"col s3 m3\">\n            <div className=\"card blue-grey darken-1\" >\n              <div className=\"card-content white-text\">\n                <span className=\"card-title\">Charging Station's Info</span>\n              </div>\n              <div className=\"card-action\">\n                <p>Address</p> \n                <input \n                type=\"username\" \n                placeholder=\"Address\"\n                id=\"station-address\" \n                className=\"station-address\" \n                value={this.state.username}\n                onChange={this.handleUserInput}\n                />\n                <p>Charging Points</p> \n                <input \n                type=\"username\" \n                placeholder=\"Charging Points\"\n                id=\"Charging-Points\" \n                className=\"Charging-Points\" \n                value={this.state.username}\n                onChange={this.handleUserInput}\n                />\n              </div>\n              <div className=\"right-align\">\n                <button className=\"waves-effect waves-light btn modal-trigger\" type=\"submit\" name=\"action\" id=\"sumbit-changes\" onClick={this.submitChanges}>Save Changes \n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  \n}\n\nexport default Map",["43","44"],"/home/jason/HardEng/Hardeng/front-end/src/UserInfo.js",[],{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":9},{"ruleId":"45","severity":1,"message":"50","line":5,"column":13,"nodeType":"47","messageId":"48","endLine":5,"endColumn":25},{"ruleId":"45","severity":1,"message":"51","line":6,"column":10,"nodeType":"47","messageId":"48","endLine":6,"endColumn":23},{"ruleId":"45","severity":1,"message":"52","line":7,"column":10,"nodeType":"47","messageId":"48","endLine":7,"endColumn":21},{"ruleId":"45","severity":1,"message":"53","line":49,"column":13,"nodeType":"47","messageId":"48","endLine":49,"endColumn":22},{"ruleId":"45","severity":1,"message":"54","line":3,"column":34,"nodeType":"47","messageId":"48","endLine":3,"endColumn":38},{"ruleId":"45","severity":1,"message":"55","line":3,"column":47,"nodeType":"47","messageId":"48","endLine":3,"endColumn":55},{"ruleId":"45","severity":1,"message":"56","line":10,"column":8,"nodeType":"47","messageId":"48","endLine":10,"endColumn":11},{"ruleId":"45","severity":1,"message":"57","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"45","severity":1,"message":"52","line":6,"column":10,"nodeType":"47","messageId":"48","endLine":6,"endColumn":21},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'L' is defined but never used.","'Autocomplete' is defined but never used.","'AiOutlineSend' is defined but never used.","'getStations' is defined but never used.","'instances' is assigned a value but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'Map' is defined but never used.","'UserInfo' is defined but never used.","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-global-assign","no-unsafe-negation"]