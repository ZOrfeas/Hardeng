[{"/home/jason/HardEng/Hardeng/front-end/src/API.js":"1","/home/jason/HardEng/Hardeng/front-end/src/index.js":"2","/home/jason/HardEng/Hardeng/front-end/src/ChargingExperience.js":"3","/home/jason/HardEng/Hardeng/front-end/src/LoginForm.js":"4","/home/jason/HardEng/Hardeng/front-end/src/Map.js":"5","/home/jason/HardEng/Hardeng/front-end/src/UserInfo.js":"6","/home/jason/HardEng/Hardeng/front-end/src/Payment.js":"7","/home/jason/HardEng/Hardeng/front-end/src/Home.js":"8","/home/jason/HardEng/Hardeng/front-end/src/EnergyMonitoring.js":"9","/home/jason/HardEng/Hardeng/front-end/src/EditUserInfo.js":"10","/home/jason/HardEng/Hardeng/front-end/src/Header.js":"11"},{"size":3327,"mtime":1615405635780,"results":"12","hashOfConfig":"13"},{"size":859,"mtime":1614190347530,"results":"14","hashOfConfig":"13"},{"size":13476,"mtime":1615573416672,"results":"15","hashOfConfig":"13"},{"size":4729,"mtime":1615407519710,"results":"16","hashOfConfig":"13"},{"size":8323,"mtime":1615407519710,"results":"17","hashOfConfig":"13"},{"size":3305,"mtime":1615406926100,"results":"18","hashOfConfig":"13"},{"size":3632,"mtime":1615327595343,"results":"19","hashOfConfig":"13"},{"size":3288,"mtime":1615407654830,"results":"20","hashOfConfig":"13"},{"size":11141,"mtime":1614369627848,"results":"21","hashOfConfig":"13"},{"size":5118,"mtime":1614369627848,"results":"22","hashOfConfig":"13"},{"size":551,"mtime":1614189333360,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ong5qh",{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jason/HardEng/Hardeng/front-end/src/API.js",["53"],"/home/jason/HardEng/Hardeng/front-end/src/index.js",["54","55","56"],"/home/jason/HardEng/Hardeng/front-end/src/ChargingExperience.js",["57"],"/home/jason/HardEng/Hardeng/front-end/src/LoginForm.js",["58"],"/home/jason/HardEng/Hardeng/front-end/src/Map.js",["59","60"],"import React, { useState } from 'react';\nimport UserInfo from './UserInfo';\nimport M from 'materialize-css';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet'\nimport L from 'leaflet'\nimport { getAdminStations,updateAdminStation } from './API';\nimport 'leaflet/dist/leaflet.css';\nimport \"./Map.css\";\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport person from './icons/black-marker.png';\n\n\nvar locationIcon = L.icon({\n  iconUrl: person,\n  shadowUrl: iconShadow,\n  iconSize: [36, 36],\n  iconAnchor: [18, 36]\n});\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  iconRetinaUrl: iconRetina,\n  shadowUrl: iconShadow,\n  iconSize: [24, 36],\n  iconAnchor: [12, 36]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst Athens = [37.983810, 23.727539];\n\nconst stationsHardcoded = [\n  { Longitude:37.983810, Latitude: 23.727539, AddressLine: \"Athens\", time: \"10 minutes\", condition: \"Available\" },\n  {  Longitude:40.629269, Latitude: 22.947412, AddressLine: \"Thessaloniki\", time: \"5 minutes\", condition: \"Maintenance\" }\n];\n\nfunction LocationMarker(props) {\n  const [position, setPosition] = useState(null)\n  const map = useMapEvents({\n    click() {\n      map.locate();\n    },\n\n    locationfound(e) {\n      setPosition(e.latlng);\n      props.setter(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  })\n\n  return position === null ? null : (\n    <Marker position={position} icon={locationIcon}>\n      <Popup>You are here</Popup>\n    </Marker>\n  )\n}\n\nclass Map extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      adminKey: localStorage.getItem(\"adminKey\"),\n      adminID: localStorage.getItem(\"adminID\"),\n      stationID: null,\n      stations: stationsHardcoded,\n      currentPos: null,\n      chosenIndex: null,\n      zoom: 3,\n      error: null,\n      btnIndex: true,\n      address: null,\n      chargingPoints: null,\n      providerID: null,\n      lat: null,\n      lot: null,\n    };\n    this.setState({\n      username: \"\"  \n    })\n    this.submitChanges = this.submitChanges.bind(this);\n    this.showMarkers = this.showMarkers.bind(this);\n    this.handleLocation = this.handleLocation.bind(this);\n    this.showOptions = this.showOptions.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleUserInput = this.handleUserInput.bind(this);\n    this.enableButton = this.enableButton.bind(this);\n    this.handleUserInputAddress = this.handleUserInputAddress.bind(this);\n    this.handleUserInputProviderID = this.handleUserInputProviderID.bind(this);\n  }\n\n  handleUserInput(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  showMarkers() {\n    var i = this.state.chosenIndex;\n\n    if (i === null) {\n      return (this.state.stations.map(({ Longitude, Latitude, AddressLine }, index) => <Marker key={index} value={AddressLine} position={[Latitude,Longitude]}></Marker>));\n    }\n    else {\n      var station = this.state.stations[i];\n      return (<Marker key={i} value={station.AddressLine} position={[station.Longitude,station.Latitude]}></Marker>);\n    }\n  }\n\n  showOptions() {\n    return (\n      this.state.stations.map(({ Longitude, Latitude, AddressLine }, index) => <option value={index}> {AddressLine} </option>)\n    );\n  }\n\n  handleSelect(e) {\n    e.target.value === \"all\" ? this.setState({ chosenIndex: null }) : this.setState({ chosenIndex: e.target.value });\n    console.log(e.target.value)\n    console.log(this.state.stations[e.target.value][\"AddressLine\"])\n    console.log(this.state.stations[e.target.value][\"TotalChargingPoints\"])\n    this.setState({address: this.state.stations[e.target.value][\"AddressLine\"]})\n    this.setState({chargingPoints: this.state.stations[e.target.value][\"TotalChargingPoints\"]})\n    this.setState({providerID: this.state.stations[e.target.value][\"EnergyProviderID\"]})\n    this.setState({lot: this.state.stations[e.target.value][\"Longitude\"]})\n    this.setState({lat: this.state.stations[e.target.value][\"Latitude\"]})\n    this.setState({stationID: this.state.stations[e.target.value][\"StationID\"]})\n  }\n\n  handleLocation(latlng) {\n    this.setState({\n      currentPos: latlng\n    } \n    );\n}\n\n  componentDidMount() {\n    document.addEventListener('DOMContentLoaded', function() {\n      var elems = document.querySelectorAll('.dropdown-trigger');\n      var instances = M.Dropdown.init(elems, {});\n    });\n\n    // M.AutoInit();\n\n    getAdminStations(this.state.adminKey,this.state.adminID)\n    .then(res => {\n      console.log(res)\n      this.setState({stations: res.data})\n    })\n    .catch(() => {\n  \n    })\n\n  }\n\n  submitChanges(){\n    if (window.confirm(\"U sur?????\")) {\n      const obj = {\n      \"lat\" : this.state.lat,\n      \"lon\" : this.state.lot,\n      \"address\" : this.state.address,\n      \"adminId\" : this.state.adminID,\n      \"providerId\" : this.state.providerID,\n      }\n      updateAdminStation(this.state.adminKey,this.state.stationID,obj)\n      .then(res => {\n        console.log(res)\n        window.location.reload();\n      })\n      .catch(error => {\n        console.log(error.response)\n      })\n    } \n    else {\n        //do nothing\n    }\n  }\n\n  enableButton(){\n    this.setState({btnIndex: false});\n  }\n\n  handleUserInputProviderID (e){\n    this.setState({btnIndex: false});\n    this.setState({providerID: e.target.value})\n  }\n\n  handleUserInputAddress (e){\n    this.setState({btnIndex: false});\n    this.setState({address: e.target.value})\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"row\">\n          <div className=\"col s9 right align\">\n            <div className=\"card hoverable\">\n                <MapContainer\n                  className=\"map\"\n                  center={Athens}\n                  zoom={this.state.zoom}\n                >\n                  <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  />\n                  {this.showMarkers()}\n                  <LocationMarker setter={this.handleLocation} />\n                </MapContainer>\n                <form>\n                    <select className=\"browser-default\" onChange={this.handleSelect}>\n                      <option value=\"\" disabled selected>Choose station ...</option>\n                      <option value=\"all\">Show all stations</option>\n                      {this.showOptions()}\n                    </select>\n                  </form>\n            </div>\n          </div>\n          <div className=\"col s3 m3\">\n            <div className=\"card blue-grey darken-1\" >\n              <div className=\"card-content white-text\">\n                <span className=\"card-title\">Charging Station's Info</span>\n              </div>\n              <div className=\"card-action\">\n                <div class=\"input-field col s12 right align\">\n                  <input placeholder=\"Address\" id=\"station_address\" value ={this.state.address} type=\"text\" class=\"validate\" onChange={this.handleUserInputAddress}/>\n                  <label for=\"station_address\">  </label>\n                </div> \n                <div class=\"input-field col s12 right align\">\n                  <input placeholder=\"Charging Points\" id=\"station_charging_points\" value={this.state.chargingPoints} type=\"text\" class=\"validate\"/>\n                  <label for=\"station_charging_points\">  </label>\n                </div> \n                <div class=\"input-field col s12 right align\">\n                  <input placeholder=\"Energy Provider ID\" id=\"provider_id\" value={this.state.providerID} type=\"text\" class=\"validate\" onChange={this.handleUserInputProviderID}/>\n                  <label for=\"provider_id\"> </label>\n                </div> \n              </div>\n              <div className=\"right-align\">\n                <button className=\"waves-effect waves-light btn modal-trigger\" type=\"submit\" name=\"action\" id=\"sumbit-changes\" onClick={this.submitChanges} disabled={this.state.btnIndex}>Save Changes \n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  \n}\n\nexport default Map","/home/jason/HardEng/Hardeng/front-end/src/UserInfo.js",[],"/home/jason/HardEng/Hardeng/front-end/src/Payment.js",["61","62","63"],"/home/jason/HardEng/Hardeng/front-end/src/Home.js",["64","65","66","67","68","69","70","71"],"import React, { useState } from 'react';\nimport \"./Home.css\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css'\nimport M, { Autocomplete } from 'materialize-css';\nimport { AiOutlineSend } from \"react-icons/ai\";\nimport { getStations } from './API';\nimport Map from './Map.js';\nimport image from './icons/image4.jpg'\n\nclass Home extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      driverKey: localStorage.getItem(\"driverKey\"),\n      adminKey: localStorage.getItem(\"adminKey\"),\n    }\n\n    this.choosePage = this.choosePage.bind(this);\n  }\n\n  choosePage(e){\n    window.location = e.target.value;\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"row\">\n          <div style={{ \n              backgroundImage: `url(${image})`,\n              backgroundRepeat: 'no-repeat',\n              height: '1000px',\n              backgroundAttachment: 'fixed',\n              backgroundSize: '100% 100%',\n              }} className = \"background\">\n                \n            <div className=\"row\">\n              <div className=\"col s12\">\n                <div className=\"navbar-fixed\">\n                  <nav className=\"transparent z-depth-0\" id=\"home-nav\">\n                    <div className=\"nav-wrapper\">\n                      <a href=\"\" className=\"home-brand-logo\">Logo Placeholder</a>\n                      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                        <li>\n                          <button \n                          onClick={this.choosePage}\n                          value=\"\\StationMonitoring\"\n                          className=\"btn-flat\"\n                          disabled={this.state.adminKey === null}>\n                            Station Monitoring\n                          </button>\n                        </li>\n                        <li>\n                          <button \n                          onClick={this.choosePage}\n                          value=\"\\ChargingExperience\"\n                          className=\"btn-flat\"\n                          disabled={this.state.driverKey === null}>\n                            Charging Experience\n                          </button>\n                        </li>\n                        <li>\n                          <button \n                          onClick={this.choosePage}\n                          value=\"\\EnergyMonitoring\"\n                          className=\"btn-flat\"\n                          disabled={this.state.adminKey === null}>\n                            Energy Monitoring\n                          </button>\n                        </li>\n                        <li>\n                          <button \n                          onClick={this.choosePage}\n                          value=\"\\EditUserInfo\"\n                          className=\"btn-flat\"\n                          disabled={this.state.driverKey === null}>\n                            Edit Profile\n                          </button>\n                        </li>\n                      </ul>\n                      <div class=\"divider\"></div>\n                    </div>\n                  </nav >\n                </div>\n              </div>\n            </div>\n            \n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;",["72","73"],"/home/jason/HardEng/Hardeng/front-end/src/EnergyMonitoring.js",["74","75","76","77","78","79","80","81","82","83"],"import React, { useState } from 'react';\nimport 'leaflet/dist/leaflet.css'\nimport image from './icons/image4.jpg'\nimport \"./Map.css\";\nimport L from 'leaflet'\nimport M from 'materialize-css';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents} from 'react-leaflet'\nimport \"./EnergyMonitoring.css\"\nimport { ResponsiveLine } from '@nivo/line'\nimport {Line} from 'react-chartjs-2'\nimport bxb from './icons/bxb.png'\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport person from './icons/black-marker.png';\n\nconst Athens = [37.983810, 23.727539];\nconst data = [\n  {\n    \"id\": \"All Stations\",\n    \"color\": \"hsl(160, 70%, 50%)\",\n    \"data\": [\n      {\n        \"x\": \"Athens\",\n        \"y\": 210\n      },\n      {\n        \"x\": \"Thessaloniki\",\n        \"y\": 287\n      },\n      {\n        \"x\": \"Tou Kosta\",\n        \"y\": 59\n      },\n      {\n        \"x\": \"Kriti\",\n        \"y\": 57\n      },\n      {\n        \"x\": \"Paraliaki\",\n        \"y\": 38\n      },\n      {\n        \"x\": \"Ameriki\",\n        \"y\": 232\n      },\n      {\n        \"x\": \"Iasonas\",\n        \"y\": 242\n      },\n      {\n        \"x\": \"Orfeas\",\n        \"y\": 96\n      },\n      {\n        \"x\": \"Bill\",\n        \"y\": 124\n      },\n      {\n        \"x\": \"Pap\",\n        \"y\": 92\n      },\n      {\n        \"x\": \"Kostas\",\n        \"y\": 225\n      },\n      {\n        \"x\": \"others\",\n        \"y\": 55\n      }\n    ]\n  }\n]\n\n\nconst stationsHardcoded = [\n  { position: [37.983810, 23.727539], label: \"Athens\", time: \"10 minutes\", condition: \"Available\" },\n  { position: [40.629269, 22.947412], label: \"Thessaloniki\", time: \"5 minutes\", condition: \"Maintenance\" }\n];\n\nvar locationIcon = L.icon({\n  iconUrl: person,\n  shadowUrl: iconShadow,\n  iconSize: [36, 36],\n  iconAnchor: [18, 36]\n});\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  iconRetinaUrl: iconRetina,\n  shadowUrl: iconShadow,\n  iconSize: [24, 36],\n  iconAnchor: [12, 36]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nconst style = {\n  map: {\n    height: '500px',\n    width: '100%'\n  }\n}\n\nfunction LocationMarker(props) {\n  const [position, setPosition] = useState(null)\n  const map = useMapEvents({\n    click(e) {\n      \n      setPosition(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n      let val = document.getElementById('region-placeholder')\n      val.value = e.latlng;\n    },\n  })\n\n  return position === null ? null : (\n    <Marker position={position} icon={locationIcon}>\n      <Popup> <div style={{ \n                backgroundImage: `url(${bxb})`,\n                backgroundRepeat: 'no-repeat',\n                height: '50px',\n                backgroundAttachment: 'fixed',\n                backgroundSize: '100% 100%',\n                }}> </div> </Popup>\n    </Marker>\n  )\n}\n\nclass EnergyMonitoring extends React.Component{\n  constructor(props){\n    super(props);\n\n  this.state = {\n    fromIndex:null,\n    toIndex:null,\n    regionIndex:null,\n  };\n  // this.datepickerFrom=this.datepickerFrom.bind(this);\n  // this.datepickerTo=this.datepickerTo.bind(this);\n  // this.regionSelected=this.regionSelected.bind(this);\n  this.CalcCostPerRegion=this.CalcCostPerRegion.bind(this);\n}\n\ncomponentDidMount(){\n  document.addEventListener('DOMContentLoaded', function() {\n    var elems = document.querySelectorAll('.datepicker');\n    var instances = M.Datepicker.init(elems, {format: 'yyyy-mm-dd'});\n  });\n}\n\nCalcCostPerRegion (){\n    let from = document.getElementById('datepicker-from');\n    let to = document.getElementById('datepicker-to');\n    let region = document.getElementById('region-placeholder');\n    if (from.value != 'From' && to.value != 'To' && region.value != \"Region\" ){\n      let temp = document.getElementById('energy-cost-per-region');\n      temp.value = \"1000\";\n    }\n    else if (region.value == \"Region\" && from.value != 'From' && to.value != 'To'){\n      return M.toast({html: 'Please Select a Region '});        \n    }\n    else {\n      return M.toast({html: 'Please Select a Date'});   \n    }\n    return null;\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"row\">\n          <div style={{ \n                backgroundImage: `url(${image})`,\n                backgroundRepeat: 'no-repeat',\n                height: '1000px',\n                backgroundAttachment: 'fixed',\n                backgroundSize: '100% 100%',\n                }} className = \"background\">\n            <div className=\"col s5\" id=\"energy-per-region-card\">\n              <div className=\"card hoverable blue-grey darken-1\" id=\"map-energy-monitoring\" >\n                <div className=\"card-content\" id=\"map-energy-monitoring\">\n                  <MapContainer\n                    center={Athens}\n                    onClick={this.handleClick}\n                    zoom={20}\n                    style={style.map}\n                  >\n                    <TileLayer\n                      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <LocationMarker/>\n                  </MapContainer>\n                </div>\n                <div className=\"card-action\">\n                  {/* <p className=\"titles-above-input\">I am a very simple card. I am good at containing small bits of information.</p> */}\n                    <input type=\"button\" className=\"datepicker\" value=\"From\" id=\"datepicker-from\" />\n                    <input type=\"button\" className=\"datepicker\" value=\"To\" id=\"datepicker-to\" />\n                    <input type=\"button\" value=\"Region\" id=\"region-placeholder\" />\n                    <div className=\"right-align\">\n                      <a class=\"waves-effect waves-light btn\" onClick={this.CalcCostPerRegion}>Calculate</a>\n                    </div>\n                    <input type=\"text\" value=\"Energy Cost per Region\" id=\"energy-cost-per-region\"/>\n                      \n                </div>\n              </div>\n            </div>\n            <div className=\"chart-energy-per-station\">\n                <ResponsiveLine\n                  data={data}\n                  margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n                  xScale={{ type: 'point' }}\n                  yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                  yFormat=\" >-.2f\"\n                  axisTop={null}\n                  axisRight={null}\n                  axisBottom={{\n                      orient: 'bottom',\n                      tickSize: 5,\n                      tickPadding: 5,\n                      tickRotation: 0,\n                      legend: 'Charging Stations',\n                      legendOffset: 36,\n                      legendPosition: 'middle'\n                  }}\n                  axisLeft={{\n                      orient: 'left',\n                      tickSize: 5,\n                      tickPadding: 5,\n                      tickRotation: 0,\n                      legend: 'Energy Consumption',\n                      legendOffset: -40,\n                      legendPosition: 'middle'\n                  }}\n                  pointSize={10}\n                  pointColor={{ theme: 'background' }}\n                  pointBorderWidth={2}\n                  pointBorderColor={{ from: 'serieColor' }}\n                  pointLabelYOffset={-12}\n                  useMesh={true}\n                  legends={[\n                      {\n                          anchor: 'bottom-right',\n                          direction: 'column',\n                          justify: false,\n                          translateX: 100,\n                          translateY: 0,\n                          itemsSpacing: 0,\n                          itemDirection: 'left-to-right',\n                          itemWidth: 80,\n                          itemHeight: 20,\n                          itemOpacity: 0.75,\n                          symbolSize: 12,\n                          symbolShape: 'circle',\n                          symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                          effects: [\n                              {\n                                  on: 'hover',\n                                  style: {\n                                      itemBackground: 'rgba(0, 0, 0, .03)',\n                                      itemOpacity: 1\n                                  }\n                              }\n                          ]\n                      }\n                  ]}\n                />\n            </div>\n            <div className=\"chart-energy-per-day\">\n            <ResponsiveLine\n                  data={data}\n                  margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n                  xScale={{ type: 'point' }}\n                  yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                  yFormat=\" >-.2f\"\n                  axisTop={null}\n                  axisRight={null}\n                  axisBottom={{\n                      orient: 'bottom',\n                      tickSize: 5,\n                      tickPadding: 5,\n                      tickRotation: 0,\n                      legend: 'Day',\n                      legendOffset: 36,\n                      legendPosition: 'middle'\n                  }}\n                  axisLeft={{\n                      orient: 'left',\n                      tickSize: 5,\n                      tickPadding: 5,\n                      tickRotation: 0,\n                      legend: 'Energy Consumption',\n                      legendOffset: -40,\n                      legendPosition: 'middle'\n                  }}\n                  pointSize={10}\n                  pointColor={{ theme: 'background' }}\n                  pointBorderWidth={2}\n                  pointBorderColor={{ from: 'serieColor' }}\n                  pointLabelYOffset={-12}\n                  useMesh={true}\n                  legends={[\n                      {\n                          anchor: 'bottom-right',\n                          direction: 'column',\n                          justify: false,\n                          translateX: 100,\n                          translateY: 0,\n                          itemsSpacing: 0,\n                          itemDirection: 'left-to-right',\n                          itemWidth: 80,\n                          itemHeight: 20,\n                          itemOpacity: 0.75,\n                          symbolSize: 12,\n                          symbolShape: 'circle',\n                          symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                          effects: [\n                              {\n                                  on: 'hover',\n                                  style: {\n                                      itemBackground: 'rgba(0, 0, 0, .03)',\n                                      itemOpacity: 1\n                                  }\n                              }\n                          ]\n                      }\n                  ]}\n                />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EnergyMonitoring;",["84","85"],"/home/jason/HardEng/Hardeng/front-end/src/EditUserInfo.js",["86","87","88","89","90","91","92"],"import React, { useState } from 'react';\nimport \"./EditUserInfo.css\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css'\nimport M, { Autocomplete } from 'materialize-css';\nimport { AiOutlineSend } from \"react-icons/ai\";\nimport { getStations } from './API';\nimport Map from './Map.js';\nimport image from './icons/image3.jpg'\n\nconst driversHardcoded = [\n  {driver_name: \"Kostas\", id: 11111, bonus_points: 10, carID: 13,  email: \"kostas@kostas.gr\", walletID: 12315464758},\n];\n\n\n\nclass EditUserInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setState({\n      username: \"\",\n    });\n    this.state = {\n      username: driversHardcoded[0][\"driver_name\"],\n      email: driversHardcoded[0][\"email\"],\n      bonusPoints: driversHardcoded[0][\"bonus_points\"],\n      wallet: driversHardcoded[0][\"walletID\"],\n    };\n  }\n\n  submitChanges(){\n    if (window.confirm(\"U sur?????\")) {\n        //get driver with id and change info\n    } \n    else {\n        //do nothing\n    }\n  }\n \n  componentDidMount(){\n    document.addEventListener('DOMContentLoaded', function() {\n      var elems = document.querySelectorAll('.datepicker');\n      var instances = M.Datepicker.init(elems, {format: 'yyyy-mm-dd'});\n    });\n  }\n  \n   render(){\n     return(\n      \n      <div className=\"a\">\n        <div style={{ \n              backgroundImage: `url(${image})`,\n              width:'100%',\n              backgroundRepeat: 'no-repeat',\n              height: '1000px',\n              backgroundSize: 'cover',\n              }} className = \"background\">\n          <div className=\"viewUserInfo\">\n            <div className=\"row\">\n              <div className=\"col s12\">\n                  <div className=\"row\">\n                    <div className=\"col s3\" id='res'>\n                      <div className=\"card blue-grey darken-1 hoverable\">\n                        <div className=\"card-content white-text\">\n                          <span className=\"card-title\">Driver's Info.</span>\n                        </div>\n                        <div className=\"card-action\">\n                          <div class=\"input-field col s6\">\n                            <input placeholder={this.state.username} id=\"first_name\" type=\"text\" class=\"validate\"/>\n                            <label for=\"first_name\"> User Name</label>\n                          </div>\n                          <div class=\"input-field col s6\">\n                            <input placeholder={this.state.email} id=\"first_name\" type=\"text\" class=\"validate\"/>\n                            <label for=\"first_name\"> Email</label>\n                          </div>\n                          <div class=\"input-field col s6\">\n                            <input placeholder={this.state.bonusPoints} id=\"first_name\" type=\"text\" class=\"validate\"/>\n                            <label for=\"first_name\"> Bonus Points</label>\n                          </div>\n                          <div class=\"input-field col s6\">\n                            <input placeholder={this.state.wallet} id=\"first_name\" type=\"text\" class=\"validate\"/>\n                            <label for=\"first_name\"> Wallet</label>\n                          </div> \n                        </div>\n                        <div className=\"right-align\">\n                          <button className=\"waves-effect waves-light btn modal-trigger\" \n                                  type=\"submit\" \n                                  name=\"action\" \n                                  id=\"sumbit-changes\" \n                                  onClick={this.submitChanges}> Save Changes \n                          </button>\n                        </div>\n                        \n                      </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s3\">\n              <div className=\"card small blue-grey darken-1 hoverable\" id=\"energy_per_km\">\n                <div className=\"card-content white-text\">\n                <span className=\"card-title\">Calculate Energy Cost per km.</span>\n                  <div class=\"input-field \">\n                    <input placeholder=\"42 km\" id=\"first_name\" type=\"text\" class=\"validate\"/>\n                    <label for=\"first_name\"> Total distance traveled in chosen duration </label>\n                  </div> \n                  <p>This is supposed to be  retrieved from the car</p>\n                </div>\n                <div className=\"card-action\">      \n                  <input type=\"button\" className=\"datepicker\" value=\"From\" id=\"user-datepicker-from\" />\n                  <input type=\"button\" className=\"datepicker\" value=\"To\" id=\"user-datepicker-to\" />\n                  <div class=\"input-field right align\">\n                    <input placeholder=\"0.42\" id=\"first_name\" type=\"text\" class=\"validate\"/>\n                    <label for=\"first_name\"> Calculated Cost </label>\n                  </div> \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditUserInfo;",["93","94"],"/home/jason/HardEng/Hardeng/front-end/src/Header.js",[],{"ruleId":"95","severity":1,"message":"96","line":6,"column":7,"nodeType":"97","messageId":"98","endLine":6,"endColumn":13},{"ruleId":"95","severity":1,"message":"99","line":3,"column":34,"nodeType":"97","messageId":"98","endLine":3,"endColumn":38},{"ruleId":"95","severity":1,"message":"100","line":3,"column":47,"nodeType":"97","messageId":"98","endLine":3,"endColumn":55},{"ruleId":"95","severity":1,"message":"101","line":10,"column":8,"nodeType":"97","messageId":"98","endLine":10,"endColumn":11},{"ruleId":"95","severity":1,"message":"102","line":40,"column":7,"nodeType":"97","messageId":"98","endLine":40,"endColumn":24},{"ruleId":"95","severity":1,"message":"100","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":17},{"ruleId":"95","severity":1,"message":"103","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":16},{"ruleId":"95","severity":1,"message":"104","line":141,"column":11,"nodeType":"97","messageId":"98","endLine":141,"endColumn":20},{"ruleId":"95","severity":1,"message":"105","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":17},{"ruleId":"95","severity":1,"message":"106","line":4,"column":26,"nodeType":"97","messageId":"98","endLine":4,"endColumn":30},{"ruleId":"95","severity":1,"message":"107","line":5,"column":22,"nodeType":"97","messageId":"98","endLine":5,"endColumn":29},{"ruleId":"95","severity":1,"message":"108","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"109","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":9},{"ruleId":"95","severity":1,"message":"110","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":9},{"ruleId":"95","severity":1,"message":"111","line":5,"column":13,"nodeType":"97","messageId":"98","endLine":5,"endColumn":25},{"ruleId":"95","severity":1,"message":"112","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":23},{"ruleId":"95","severity":1,"message":"113","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":21},{"ruleId":"95","severity":1,"message":"101","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":11},{"ruleId":"114","severity":1,"message":"115","line":44,"column":23,"nodeType":"116","endLine":44,"endColumn":62},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"95","severity":1,"message":"121","line":10,"column":9,"nodeType":"97","messageId":"98","endLine":10,"endColumn":13},{"ruleId":"95","severity":1,"message":"102","line":76,"column":7,"nodeType":"97","messageId":"98","endLine":76,"endColumn":24},{"ruleId":"95","severity":1,"message":"104","line":146,"column":9,"nodeType":"97","messageId":"98","endLine":146,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":154,"column":20,"nodeType":"124","messageId":"125","endLine":154,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":154,"column":42,"nodeType":"124","messageId":"125","endLine":154,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":154,"column":66,"nodeType":"124","messageId":"125","endLine":154,"endColumn":68},{"ruleId":"122","severity":1,"message":"126","line":158,"column":27,"nodeType":"124","messageId":"125","endLine":158,"endColumn":29},{"ruleId":"122","severity":1,"message":"123","line":158,"column":53,"nodeType":"124","messageId":"125","endLine":158,"endColumn":55},{"ruleId":"122","severity":1,"message":"123","line":158,"column":75,"nodeType":"124","messageId":"125","endLine":158,"endColumn":77},{"ruleId":"114","severity":1,"message":"127","line":200,"column":23,"nodeType":"116","endLine":200,"endColumn":96},{"ruleId":"117","replacedBy":"128"},{"ruleId":"119","replacedBy":"129"},{"ruleId":"95","severity":1,"message":"108","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"109","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":9},{"ruleId":"95","severity":1,"message":"111","line":5,"column":13,"nodeType":"97","messageId":"98","endLine":5,"endColumn":25},{"ruleId":"95","severity":1,"message":"112","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":23},{"ruleId":"95","severity":1,"message":"113","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":21},{"ruleId":"95","severity":1,"message":"101","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":11},{"ruleId":"95","severity":1,"message":"104","line":43,"column":11,"nodeType":"97","messageId":"98","endLine":43,"endColumn":20},{"ruleId":"117","replacedBy":"130"},{"ruleId":"119","replacedBy":"131"},"no-unused-vars","'config' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Redirect' is defined but never used.","'Map' is defined but never used.","'stationsHardcoded' is assigned a value but never used.","'UserInfo' is defined but never used.","'instances' is assigned a value but never used.","'userPay' is defined but never used.","'Card' is defined but never used.","'Ewallet' is defined but never used.","'useState' is defined but never used.","'L' is defined but never used.","'M' is defined but never used.","'Autocomplete' is defined but never used.","'AiOutlineSend' is defined but never used.","'getStations' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'Line' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["132"],["133"],["132"],["133"],"no-global-assign","no-unsafe-negation"]