[{"/home/jason/HardEng/Hardeng/front-end/src/StationMonitoring.js":"1","/home/jason/HardEng/Hardeng/front-end/src/API.js":"2","/home/jason/HardEng/Hardeng/front-end/src/index.js":"3","/home/jason/HardEng/Hardeng/front-end/src/ChargingExperience.js":"4","/home/jason/HardEng/Hardeng/front-end/src/LoginForm.js":"5","/home/jason/HardEng/Hardeng/front-end/src/Map.js":"6","/home/jason/HardEng/Hardeng/front-end/src/UserInfo.js":"7","/home/jason/HardEng/Hardeng/front-end/src/Payment.js":"8","/home/jason/HardEng/Hardeng/front-end/src/Home.js":"9","/home/jason/HardEng/Hardeng/front-end/src/EnergyMonitoring.js":"10","/home/jason/HardEng/Hardeng/front-end/src/EditUserInfo.js":"11","/home/jason/HardEng/Hardeng/front-end/src/Header.js":"12"},{"size":7958,"mtime":1614191058870,"results":"13","hashOfConfig":"14"},{"size":3058,"mtime":1615368075300,"results":"15","hashOfConfig":"14"},{"size":859,"mtime":1614190347530,"results":"16","hashOfConfig":"14"},{"size":13224,"mtime":1615372477350,"results":"17","hashOfConfig":"14"},{"size":4512,"mtime":1614441642127,"results":"18","hashOfConfig":"14"},{"size":5693,"mtime":1614190144290,"results":"19","hashOfConfig":"14"},{"size":1980,"mtime":1615370595390,"results":"20","hashOfConfig":"14"},{"size":3632,"mtime":1615327595343,"results":"21","hashOfConfig":"14"},{"size":3288,"mtime":1615374674250,"results":"22","hashOfConfig":"14"},{"size":11141,"mtime":1614369627848,"results":"23","hashOfConfig":"14"},{"size":5118,"mtime":1614369627848,"results":"24","hashOfConfig":"14"},{"size":551,"mtime":1614189333360,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ong5qh",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jason/HardEng/Hardeng/front-end/src/StationMonitoring.js",["56","57","58","59","60","61"],"/home/jason/HardEng/Hardeng/front-end/src/API.js",["62"],"/home/jason/HardEng/Hardeng/front-end/src/index.js",["63","64","65"],"/home/jason/HardEng/Hardeng/front-end/src/ChargingExperience.js",[],"/home/jason/HardEng/Hardeng/front-end/src/LoginForm.js",[],"/home/jason/HardEng/Hardeng/front-end/src/Map.js",["66","67"],"import React, { useState } from 'react';\nimport UserInfo from './UserInfo';\nimport M from 'materialize-css';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet'\nimport L from 'leaflet'\nimport { getStations } from './API';\nimport 'leaflet/dist/leaflet.css';\nimport \"./Map.css\";\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport person from './icons/black-marker.png';\n\n\nvar locationIcon = L.icon({\n  iconUrl: person,\n  shadowUrl: iconShadow,\n  iconSize: [36, 36],\n  iconAnchor: [18, 36]\n});\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  iconRetinaUrl: iconRetina,\n  shadowUrl: iconShadow,\n  iconSize: [24, 36],\n  iconAnchor: [12, 36]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst Athens = [37.983810, 23.727539];\n\nconst stationsHardcoded = [\n  { position: [37.983810, 23.727539], label: \"Athens\", time: \"10 minutes\", condition: \"Available\" },\n  { position: [40.629269, 22.947412], label: \"Thessaloniki\", time: \"5 minutes\", condition: \"Maintenance\" }\n];\n\nfunction LocationMarker(props) {\n  const [position, setPosition] = useState(null)\n  const map = useMapEvents({\n    click() {\n      map.locate();\n    },\n\n    locationfound(e) {\n      setPosition(e.latlng);\n      props.setter(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  })\n\n  return position === null ? null : (\n    <Marker position={position} icon={locationIcon}>\n      <Popup>You are here</Popup>\n    </Marker>\n  )\n}\n\nclass Map extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      stations: stationsHardcoded,\n      currentPos: null,\n      chosenIndex: null,\n      zoom: 10,\n      error: null,\n    };\n    this.setState({\n      username: \"\"  \n    })\n    this.showMarkers = this.showMarkers.bind(this);\n    this.handleLocation = this.handleLocation.bind(this);\n    this.showOptions = this.showOptions.bind(this);\n    // this.handleLocation = this.handleLocation.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleUserInput = this.handleUserInput.bind(this);\n  }\n\n  handleUserInput(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  showMarkers() {\n    var i = this.state.chosenIndex;\n\n    if (i === null) {\n      return (this.state.stations.map(({ position, label }, index) => <Marker key={index} value={label} position={position}></Marker>));\n    }\n\n    else {\n      var station = this.state.stations[i];\n      return (<Marker key={i} value={station.label} position={station.position}></Marker>);\n    }\n  }\n\n  showOptions() {\n    return (\n      this.state.stations.map(({ position, label }, index) => <option value={index}> {label} </option>)\n    );\n  }\n\n  handleSelect(e) {\n    e.target.value === \"all\" ? this.setState({ chosenIndex: null }) : this.setState({ chosenIndex: e.target.value });\n  }\n\n  handleLocation(latlng) {\n    this.setState({\n      currentPos: latlng\n    } \n    );\n}\n\n  componentDidMount() {\n    M.AutoInit();\n  }\n\n  submitChanges(){\n    if (window.confirm(\"U sur?????\")) {\n        //get driver with id and change info\n    } \n    else {\n        //do nothing\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"row\">\n          <div className=\"col s9 right align\">\n            <div className=\"card hoverable\">\n                <MapContainer\n                  className=\"map\"\n                  center={Athens}\n                  zoom={this.state.zoom}\n                >\n                  <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  />\n                  {this.showMarkers()}\n                  <LocationMarker setter={this.handleLocation} />\n                </MapContainer>\n                <form>\n                    <select className=\"browser-default\" onChange={this.handleSelect}>\n                      <option value=\"\" disabled selected>Choose station ...</option>\n                      <option value=\"all\">Show all stations</option>\n                      {this.showOptions()}\n                    </select>\n                  </form>\n            </div>\n          </div>\n          <div className=\"col s3 m3\">\n            <div className=\"card blue-grey darken-1\" >\n              <div className=\"card-content white-text\">\n                <span className=\"card-title\">Charging Station's Info</span>\n              </div>\n              <div className=\"card-action\">\n                <p>Address</p> \n                <input \n                type=\"username\" \n                placeholder=\"Address\"\n                id=\"station-address\" \n                className=\"station-address\" \n                value={this.state.username}\n                onChange={this.handleUserInput}\n                />\n                <p>Charging Points</p> \n                <input \n                type=\"username\" \n                placeholder=\"Charging Points\"\n                id=\"Charging-Points\" \n                className=\"Charging-Points\" \n                value={this.state.username}\n                onChange={this.handleUserInput}\n                />\n              </div>\n              <div className=\"right-align\">\n                <button className=\"waves-effect waves-light btn modal-trigger\" type=\"submit\" name=\"action\" id=\"sumbit-changes\" onClick={this.submitChanges}>Save Changes \n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  \n}\n\nexport default Map",["68","69"],"/home/jason/HardEng/Hardeng/front-end/src/UserInfo.js",[],"/home/jason/HardEng/Hardeng/front-end/src/Payment.js",["70","71","72"],"/home/jason/HardEng/Hardeng/front-end/src/Home.js",["73","74","75","76","77","78","79","80"],"/home/jason/HardEng/Hardeng/front-end/src/EnergyMonitoring.js",["81","82","83","84","85","86","87","88","89","90"],"import React, { useState } from 'react';\nimport 'leaflet/dist/leaflet.css'\nimport image from './icons/image4.jpg'\nimport \"./Map.css\";\nimport L from 'leaflet'\nimport M from 'materialize-css';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents} from 'react-leaflet'\nimport \"./EnergyMonitoring.css\"\nimport { ResponsiveLine } from '@nivo/line'\nimport {Line} from 'react-chartjs-2'\nimport bxb from './icons/bxb.png'\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport person from './icons/black-marker.png';\n\nconst Athens = [37.983810, 23.727539];\nconst data = [\n  {\n    \"id\": \"All Stations\",\n    \"color\": \"hsl(160, 70%, 50%)\",\n    \"data\": [\n      {\n        \"x\": \"Athens\",\n        \"y\": 210\n      },\n      {\n        \"x\": \"Thessaloniki\",\n        \"y\": 287\n      },\n      {\n        \"x\": \"Tou Kosta\",\n        \"y\": 59\n      },\n      {\n        \"x\": \"Kriti\",\n        \"y\": 57\n      },\n      {\n        \"x\": \"Paraliaki\",\n        \"y\": 38\n      },\n      {\n        \"x\": \"Ameriki\",\n        \"y\": 232\n      },\n      {\n        \"x\": \"Iasonas\",\n        \"y\": 242\n      },\n      {\n        \"x\": \"Orfeas\",\n        \"y\": 96\n      },\n      {\n        \"x\": \"Bill\",\n        \"y\": 124\n      },\n      {\n        \"x\": \"Pap\",\n        \"y\": 92\n      },\n      {\n        \"x\": \"Kostas\",\n        \"y\": 225\n      },\n      {\n        \"x\": \"others\",\n        \"y\": 55\n      }\n    ]\n  }\n]\n\n\nconst stationsHardcoded = [\n  { position: [37.983810, 23.727539], label: \"Athens\", time: \"10 minutes\", condition: \"Available\" },\n  { position: [40.629269, 22.947412], label: \"Thessaloniki\", time: \"5 minutes\", condition: \"Maintenance\" }\n];\n\nvar locationIcon = L.icon({\n  iconUrl: person,\n  shadowUrl: iconShadow,\n  iconSize: [36, 36],\n  iconAnchor: [18, 36]\n});\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  iconRetinaUrl: iconRetina,\n  shadowUrl: iconShadow,\n  iconSize: [24, 36],\n  iconAnchor: [12, 36]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nconst style = {\n  map: {\n    height: '500px',\n    width: '100%'\n  }\n}\n\nfunction LocationMarker(props) {\n  const [position, setPosition] = useState(null)\n  const map = useMapEvents({\n    click(e) {\n      \n      setPosition(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n      let val = document.getElementById('region-placeholder')\n      val.value = e.latlng;\n    },\n  })\n\n  return position === null ? null : (\n    <Marker position={position} icon={locationIcon}>\n      <Popup> <div style={{ \n                backgroundImage: `url(${bxb})`,\n                backgroundRepeat: 'no-repeat',\n                height: '50px',\n                backgroundAttachment: 'fixed',\n                backgroundSize: '100% 100%',\n                }}> </div> </Popup>\n    </Marker>\n  )\n}\n\nclass EnergyMonitoring extends React.Component{\n  constructor(props){\n    super(props);\n\n  this.state = {\n    fromIndex:null,\n    toIndex:null,\n    regionIndex:null,\n  };\n  // this.datepickerFrom=this.datepickerFrom.bind(this);\n  // this.datepickerTo=this.datepickerTo.bind(this);\n  // this.regionSelected=this.regionSelected.bind(this);\n  this.CalcCostPerRegion=this.CalcCostPerRegion.bind(this);\n}\n\ncomponentDidMount(){\n  document.addEventListener('DOMContentLoaded', function() {\n    var elems = document.querySelectorAll('.datepicker');\n    var instances = M.Datepicker.init(elems, {format: 'yyyy-mm-dd'});\n  });\n}\n\nCalcCostPerRegion (){\n    let from = document.getElementById('datepicker-from');\n    let to = document.getElementById('datepicker-to');\n    let region = document.getElementById('region-placeholder');\n    if (from.value != 'From' && to.value != 'To' && region.value != \"Region\" ){\n      let temp = document.getElementById('energy-cost-per-region');\n      temp.value = \"1000\";\n    }\n    else if (region.value == \"Region\" && from.value != 'From' && to.value != 'To'){\n      return M.toast({html: 'Please Select a Region '});        \n    }\n    else {\n      return M.toast({html: 'Please Select a Date'});   \n    }\n    return null;\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"row\">\n          <div style={{ \n                backgroundImage: `url(${image})`,\n                backgroundRepeat: 'no-repeat',\n                height: '1000px',\n                backgroundAttachment: 'fixed',\n                backgroundSize: '100% 100%',\n                }} className = \"background\">\n            <div className=\"col s5\" id=\"energy-per-region-card\">\n              <div className=\"card hoverable blue-grey darken-1\" id=\"map-energy-monitoring\" >\n                <div className=\"card-content\" id=\"map-energy-monitoring\">\n                  <MapContainer\n                    center={Athens}\n                    onClick={this.handleClick}\n                    zoom={20}\n                    style={style.map}\n                  >\n                    <TileLayer\n                      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <LocationMarker/>\n                  </MapContainer>\n                </div>\n                <div className=\"card-action\">\n                  {/* <p className=\"titles-above-input\">I am a very simple card. I am good at containing small bits of information.</p> */}\n                    <input type=\"button\" className=\"datepicker\" value=\"From\" id=\"datepicker-from\" />\n                    <input type=\"button\" className=\"datepicker\" value=\"To\" id=\"datepicker-to\" />\n                    <input type=\"button\" value=\"Region\" id=\"region-placeholder\" />\n                    <div className=\"right-align\">\n                      <a class=\"waves-effect waves-light btn\" onClick={this.CalcCostPerRegion}>Calculate</a>\n                    </div>\n                    <input type=\"text\" value=\"Energy Cost per Region\" id=\"energy-cost-per-region\"/>\n                      \n                </div>\n              </div>\n            </div>\n            <div className=\"chart-energy-per-station\">\n                <ResponsiveLine\n                  data={data}\n                  margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n                  xScale={{ type: 'point' }}\n                  yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                  yFormat=\" >-.2f\"\n                  axisTop={null}\n                  axisRight={null}\n                  axisBottom={{\n                      orient: 'bottom',\n                      tickSize: 5,\n                      tickPadding: 5,\n                      tickRotation: 0,\n                      legend: 'Charging Stations',\n                      legendOffset: 36,\n                      legendPosition: 'middle'\n                  }}\n                  axisLeft={{\n                      orient: 'left',\n                      tickSize: 5,\n                      tickPadding: 5,\n                      tickRotation: 0,\n                      legend: 'Energy Consumption',\n                      legendOffset: -40,\n                      legendPosition: 'middle'\n                  }}\n                  pointSize={10}\n                  pointColor={{ theme: 'background' }}\n                  pointBorderWidth={2}\n                  pointBorderColor={{ from: 'serieColor' }}\n                  pointLabelYOffset={-12}\n                  useMesh={true}\n                  legends={[\n                      {\n                          anchor: 'bottom-right',\n                          direction: 'column',\n                          justify: false,\n                          translateX: 100,\n                          translateY: 0,\n                          itemsSpacing: 0,\n                          itemDirection: 'left-to-right',\n                          itemWidth: 80,\n                          itemHeight: 20,\n                          itemOpacity: 0.75,\n                          symbolSize: 12,\n                          symbolShape: 'circle',\n                          symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                          effects: [\n                              {\n                                  on: 'hover',\n                                  style: {\n                                      itemBackground: 'rgba(0, 0, 0, .03)',\n                                      itemOpacity: 1\n                                  }\n                              }\n                          ]\n                      }\n                  ]}\n                />\n            </div>\n            <div className=\"chart-energy-per-day\">\n            <ResponsiveLine\n                  data={data}\n                  margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n                  xScale={{ type: 'point' }}\n                  yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                  yFormat=\" >-.2f\"\n                  axisTop={null}\n                  axisRight={null}\n                  axisBottom={{\n                      orient: 'bottom',\n                      tickSize: 5,\n                      tickPadding: 5,\n                      tickRotation: 0,\n                      legend: 'Day',\n                      legendOffset: 36,\n                      legendPosition: 'middle'\n                  }}\n                  axisLeft={{\n                      orient: 'left',\n                      tickSize: 5,\n                      tickPadding: 5,\n                      tickRotation: 0,\n                      legend: 'Energy Consumption',\n                      legendOffset: -40,\n                      legendPosition: 'middle'\n                  }}\n                  pointSize={10}\n                  pointColor={{ theme: 'background' }}\n                  pointBorderWidth={2}\n                  pointBorderColor={{ from: 'serieColor' }}\n                  pointLabelYOffset={-12}\n                  useMesh={true}\n                  legends={[\n                      {\n                          anchor: 'bottom-right',\n                          direction: 'column',\n                          justify: false,\n                          translateX: 100,\n                          translateY: 0,\n                          itemsSpacing: 0,\n                          itemDirection: 'left-to-right',\n                          itemWidth: 80,\n                          itemHeight: 20,\n                          itemOpacity: 0.75,\n                          symbolSize: 12,\n                          symbolShape: 'circle',\n                          symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                          effects: [\n                              {\n                                  on: 'hover',\n                                  style: {\n                                      itemBackground: 'rgba(0, 0, 0, .03)',\n                                      itemOpacity: 1\n                                  }\n                              }\n                          ]\n                      }\n                  ]}\n                />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EnergyMonitoring;",["91","92"],"/home/jason/HardEng/Hardeng/front-end/src/EditUserInfo.js",["93","94","95","96","97","98","99"],"import React, { useState } from 'react';\nimport \"./EditUserInfo.css\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css'\nimport M, { Autocomplete } from 'materialize-css';\nimport { AiOutlineSend } from \"react-icons/ai\";\nimport { getStations } from './API';\nimport Map from './Map.js';\nimport image from './icons/image3.jpg'\n\nconst driversHardcoded = [\n  {driver_name: \"Kostas\", id: 11111, bonus_points: 10, carID: 13,  email: \"kostas@kostas.gr\", walletID: 12315464758},\n];\n\n\n\nclass EditUserInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setState({\n      username: \"\",\n    });\n    this.state = {\n      username: driversHardcoded[0][\"driver_name\"],\n      email: driversHardcoded[0][\"email\"],\n      bonusPoints: driversHardcoded[0][\"bonus_points\"],\n      wallet: driversHardcoded[0][\"walletID\"],\n    };\n  }\n\n  submitChanges(){\n    if (window.confirm(\"U sur?????\")) {\n        //get driver with id and change info\n    } \n    else {\n        //do nothing\n    }\n  }\n \n  componentDidMount(){\n    document.addEventListener('DOMContentLoaded', function() {\n      var elems = document.querySelectorAll('.datepicker');\n      var instances = M.Datepicker.init(elems, {format: 'yyyy-mm-dd'});\n    });\n  }\n  \n   render(){\n     return(\n      \n      <div className=\"a\">\n        <div style={{ \n              backgroundImage: `url(${image})`,\n              width:'100%',\n              backgroundRepeat: 'no-repeat',\n              height: '1000px',\n              backgroundSize: 'cover',\n              }} className = \"background\">\n          <div className=\"viewUserInfo\">\n            <div className=\"row\">\n              <div className=\"col s12\">\n                  <div className=\"row\">\n                    <div className=\"col s3\" id='res'>\n                      <div className=\"card blue-grey darken-1 hoverable\">\n                        <div className=\"card-content white-text\">\n                          <span className=\"card-title\">Driver's Info.</span>\n                        </div>\n                        <div className=\"card-action\">\n                          <div class=\"input-field col s6\">\n                            <input placeholder={this.state.username} id=\"first_name\" type=\"text\" class=\"validate\"/>\n                            <label for=\"first_name\"> User Name</label>\n                          </div>\n                          <div class=\"input-field col s6\">\n                            <input placeholder={this.state.email} id=\"first_name\" type=\"text\" class=\"validate\"/>\n                            <label for=\"first_name\"> Email</label>\n                          </div>\n                          <div class=\"input-field col s6\">\n                            <input placeholder={this.state.bonusPoints} id=\"first_name\" type=\"text\" class=\"validate\"/>\n                            <label for=\"first_name\"> Bonus Points</label>\n                          </div>\n                          <div class=\"input-field col s6\">\n                            <input placeholder={this.state.wallet} id=\"first_name\" type=\"text\" class=\"validate\"/>\n                            <label for=\"first_name\"> Wallet</label>\n                          </div> \n                        </div>\n                        <div className=\"right-align\">\n                          <button className=\"waves-effect waves-light btn modal-trigger\" \n                                  type=\"submit\" \n                                  name=\"action\" \n                                  id=\"sumbit-changes\" \n                                  onClick={this.submitChanges}> Save Changes \n                          </button>\n                        </div>\n                        \n                      </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s3\">\n              <div className=\"card small blue-grey darken-1 hoverable\" id=\"energy_per_km\">\n                <div className=\"card-content white-text\">\n                <span className=\"card-title\">Calculate Energy Cost per km.</span>\n                  <div class=\"input-field \">\n                    <input placeholder=\"42 km\" id=\"first_name\" type=\"text\" class=\"validate\"/>\n                    <label for=\"first_name\"> Total distance traveled in chosen duration </label>\n                  </div> \n                  <p>This is supposed to be  retrieved from the car</p>\n                </div>\n                <div className=\"card-action\">      \n                  <input type=\"button\" className=\"datepicker\" value=\"From\" id=\"user-datepicker-from\" />\n                  <input type=\"button\" className=\"datepicker\" value=\"To\" id=\"user-datepicker-to\" />\n                  <div class=\"input-field right align\">\n                    <input placeholder=\"0.42\" id=\"first_name\" type=\"text\" class=\"validate\"/>\n                    <label for=\"first_name\"> Calculated Cost </label>\n                  </div> \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditUserInfo;",["100","101"],"/home/jason/HardEng/Hardeng/front-end/src/Header.js",[],{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":9},{"ruleId":"102","severity":1,"message":"107","line":5,"column":13,"nodeType":"104","messageId":"105","endLine":5,"endColumn":25},{"ruleId":"102","severity":1,"message":"108","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":21},{"ruleId":"102","severity":1,"message":"110","line":49,"column":13,"nodeType":"104","messageId":"105","endLine":49,"endColumn":22},{"ruleId":"102","severity":1,"message":"111","line":6,"column":7,"nodeType":"104","messageId":"105","endLine":6,"endColumn":13},{"ruleId":"102","severity":1,"message":"112","line":3,"column":34,"nodeType":"104","messageId":"105","endLine":3,"endColumn":38},{"ruleId":"102","severity":1,"message":"113","line":3,"column":47,"nodeType":"104","messageId":"105","endLine":3,"endColumn":55},{"ruleId":"102","severity":1,"message":"114","line":10,"column":8,"nodeType":"104","messageId":"105","endLine":10,"endColumn":11},{"ruleId":"102","severity":1,"message":"115","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"102","severity":1,"message":"109","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":21},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"102","severity":1,"message":"120","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":17},{"ruleId":"102","severity":1,"message":"121","line":4,"column":26,"nodeType":"104","messageId":"105","endLine":4,"endColumn":30},{"ruleId":"102","severity":1,"message":"122","line":5,"column":22,"nodeType":"104","messageId":"105","endLine":5,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":9},{"ruleId":"102","severity":1,"message":"123","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":9},{"ruleId":"102","severity":1,"message":"107","line":5,"column":13,"nodeType":"104","messageId":"105","endLine":5,"endColumn":25},{"ruleId":"102","severity":1,"message":"108","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":21},{"ruleId":"102","severity":1,"message":"114","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":11},{"ruleId":"124","severity":1,"message":"125","line":44,"column":23,"nodeType":"126","endLine":44,"endColumn":62},{"ruleId":"102","severity":1,"message":"127","line":10,"column":9,"nodeType":"104","messageId":"105","endLine":10,"endColumn":13},{"ruleId":"102","severity":1,"message":"128","line":76,"column":7,"nodeType":"104","messageId":"105","endLine":76,"endColumn":24},{"ruleId":"102","severity":1,"message":"110","line":146,"column":9,"nodeType":"104","messageId":"105","endLine":146,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":154,"column":20,"nodeType":"131","messageId":"132","endLine":154,"endColumn":22},{"ruleId":"129","severity":1,"message":"130","line":154,"column":42,"nodeType":"131","messageId":"132","endLine":154,"endColumn":44},{"ruleId":"129","severity":1,"message":"130","line":154,"column":66,"nodeType":"131","messageId":"132","endLine":154,"endColumn":68},{"ruleId":"129","severity":1,"message":"133","line":158,"column":27,"nodeType":"131","messageId":"132","endLine":158,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":158,"column":53,"nodeType":"131","messageId":"132","endLine":158,"endColumn":55},{"ruleId":"129","severity":1,"message":"130","line":158,"column":75,"nodeType":"131","messageId":"132","endLine":158,"endColumn":77},{"ruleId":"124","severity":1,"message":"134","line":200,"column":23,"nodeType":"126","endLine":200,"endColumn":96},{"ruleId":"116","replacedBy":"135"},{"ruleId":"118","replacedBy":"136"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":9},{"ruleId":"102","severity":1,"message":"107","line":5,"column":13,"nodeType":"104","messageId":"105","endLine":5,"endColumn":25},{"ruleId":"102","severity":1,"message":"108","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":21},{"ruleId":"102","severity":1,"message":"114","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":11},{"ruleId":"102","severity":1,"message":"110","line":43,"column":11,"nodeType":"104","messageId":"105","endLine":43,"endColumn":20},{"ruleId":"116","replacedBy":"137"},{"ruleId":"118","replacedBy":"138"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'L' is defined but never used.","'Autocomplete' is defined but never used.","'AiOutlineSend' is defined but never used.","'getStations' is defined but never used.","'instances' is assigned a value but never used.","'config' is assigned a value but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'Map' is defined but never used.","'UserInfo' is defined but never used.","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'userPay' is defined but never used.","'Card' is defined but never used.","'Ewallet' is defined but never used.","'M' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Line' is defined but never used.","'stationsHardcoded' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["139"],["140"],["139"],["140"],"no-global-assign","no-unsafe-negation"]